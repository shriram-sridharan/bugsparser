#include "BUGSParser.hpp"
#include <iterator>

using namespace BUGS;

int main(int argc, char* argv[])
    {
    BUGSLexerTraits::InputStreamType input((ANTLR_UINT8*)"Test", ANTLR_ENC_8BIT);
    BUGSLexer lxr(&input); // TLexerNew is generated by ANTLR
    BUGSParserTraits::TokenStreamType tstream(ANTLR_SIZE_HINT, lxr.get_tokSource() );
    BUGSParser psr(&tstream); // TParserNew is generated by ANTLR3

    Program program = psr.prog();

    for (std::list<Node*>::iterator it = program.nodes.begin(); it!= program.nodes.end(); ++it)
            {
            	cout <<endl<< (*it)->nodename << endl;
            	cout << ((StochasticNode*)(*it))->distribution->name << endl;
            	list<string> parameters = ((StochasticNode*)(*it))->distribution->parameters;
            	for (std::list<string>::iterator stit = parameters.begin(); stit != parameters.end(); ++stit) {
            		cout << *stit << " ";
            	}
            }
    cout << "Done Parsing";
    return 1;
    }
