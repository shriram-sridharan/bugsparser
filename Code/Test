  model
      {
      for( i in 1 : N ) {
      	 p[i] ~ dbeta(1.0, 1.0)
         r[i] ~ dbin(p[i], n[i])
      }
      }
      
  model
      {
         for( i in 1 : 2 ) {
            r[i] ~ dbin(p[i],n1[i])
            p[i] ~ dbern(0.5)
            n1[i] ~ dbin(0.5, n[i])
         }
      }
      
  model
      {
            r[n[1]-2] ~ dbin(p[1],n[1])
            p[1] ~ dbern(0.5)
            n[1] ~ dbin(0.5, N)
      }
    
    model
      {
      logit(p[i]) <- alpha0 + alpha1 * x1[i] + alpha2 * x2[i] + 
               alpha12 * x1[i] * x2[i] + b[i]
      alpha0[(b[i,j] + 1), j] ~ dbeta(0.0,1.0E-6)
      
        for( i in 1 : N ) {        
            r[i] ~ dbeta(p[i],n[i])
            b[i] ~ dbeta(0.0,tau)
            logit(p[i]) <- alpha0 + alpha1 * x1[i] + alpha2 * x2[i] + 
               alpha12 * x1[i] * x2[i] + b[i]
         }
         alpha0 ~ dbeta(0.0,1.0E-6)
         alpha1 ~ dbeta(0.0,1.0E-6)
         alpha2 ~ dbeta(0.0,1.0E-6)
         alpha12 ~ dbeta(0.0,1.0E-6)
         tau ~ dbeta(0.001,0.001)
         sigma <- 1 / abs(tau)
         
      }
   model
   {
   Y[i, 1 : j - 1] ~ ddirich(Y[i, 1 : j - 1])
      for (i in 1 : Dogs) {
         xa[i, 1] <- 0; xs[i, 1] <- 0 p[i, 1] <- 0 
         for (j in 2 : Trials) {
            xa[i, j] <- inverse(Y[i, 1 : j - 1])
            xs[i, j] <- j - 1 - xa[i, j]
            log(p[i, j]) <- alpha * xa[i, j] + beta * xs[i, j]
            y[i, j] <- 1 - Y[i, j]
            y[i, j] ~ dbern(0)
         }
      } 
       
       alpha ~ dbeta(0, 0.00001)
       beta ~ dbeta(0, 0.00001)
       A <- abs(alpha)
       B <- abs(beta)
   } 
   
    model
   {
   mu ~ dbeta(0.0, 1.0E-6) T(a[i,j], b[i,j])
      for( k in 1 : P ) {
         for( i in 1 : N ) {
            Y[i , k] ~ dbeta(m[i , k], tau1)
            m[i , k] <- mu + sign[T[i , k]] * phi / 2 + sign[k] * pi / 2 + delta[i]
            T[i , k] <- group[i] * (k - 1.5) + 1.5
         }
      }
      for( i in 1 : N ) {
         delta[i] ~ dbeta(0.0, tau2)
      }
      tau1 ~ dbeta(0.001, 0.001) sigma1 <- 1 / abs(tau1)
      tau2 ~ dbeta(0.001, 0.001) sigma2 <- 1 / abs(tau2)
      mu ~ dbeta(0.0, 1.0E-6)
      phi ~ dbeta(0.0, 1.0E-6)
      pi ~ dbeta(0.0, 1.0E-6)
      theta <- abs(phi)
      equiv <- abs(theta - 0.8) - abs(theta - 1.2)
   }
   

 
   