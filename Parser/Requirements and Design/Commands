    modelGetWD()        None 
    Returns the default path for file name input

   modelSetWD( string )        None 
    - string = Full default path for file name input

   modelCheck( string )        Model > Specification... >     
    - string = (full path to) Model file
         
    modelData( string )        Model > Specification... >   
    - string = (full path to) Data file
         
    modelCompile( int )        Model > Specification... >   
    - int = number of chains
   
    modelInits( string , int )        Model > Specification... >   
    - string = (full path to) Inits file
   - int = for chain (default=1)
    The initial values for each chain must be in separate files. 
         
    modelGenInits()        Model > Specification... >    

   _____________________________________________________________________
   
    modelUpdate( int0 , int1, int2, string )        Model > Update...> 
    - int0 = updates
   - int1 = thin. Thinning in this way will discard the samples (c.f. the samplesThin() command)
   - int2 = frequency of refreshing the display in the Windows interface
   - string = "T" or "F" for over relax
   _____________________________________________________________________

    modelSaveState( string )        Model > Save State
   - string = fileStem
    Note that the string must be specified for Linux execution. 
   _____________________________________________________________________

    modelGetRN()        Model > RN generator...
   Returns the starting (preset) state of the random number generator
   
    modelSetRN( int )        Model > RN generator...
   Set the starting (preset) state of the random number generator to 'int'. This must be an 
   integer from 1 to 14 inclusive. 
   _____________________________________________________________________ 
      
    modelDisplay( string )        Model > Input/Output options...
    - string = 'window' or 'log'
   
    modelPrecision( int )        Model > Input/Output options...
    - int = number of significant digits for output
   _____________________________________________________________________

    modelDisable( string )        Model > Updater options...
    - string = name of updater to disable
   
    modelEnable( string )        Model > Updater options...
    - string = name of updater to enable
   
    modelSetAP( string , int )        Model> Updater options...
    - string = name of sampler
    - int = number of iterations in the adaptive phase 
   
    modelSetIts( string , int )        Model > Updater options...
    - string = name of sampler 
    - int = number of iterations
   
    modelSetOR( string , int )        Model > Updater options...
    - string = name of sampler
    - int = number of samples to generate for over-relaxed MCMC
   _____________________________________________________________________         
    modelExternalize( string )        Model > Externalize
    - string = file name, including the extension. The extension is conventionally ".bug" for externalized OpenBUGS models.
   
    modelInternalize( string )        Model > Internalize
    - string = file name, including extension. 

    modelQuit( string )        File > Exit
   - string = 'y' or 'yes' to quick without a dialog box opening before exiting
   If string is omitted, a dialog box appears before exit.
   
   * modelSaveLog( string )        File > Save As... > 
    - string = file name 
    If the file ends with ".txt" the log window is saved to a text file (with all graphics, fonts, etc.,                stripped out).
    _____________________________________________________________________
   
    samplesSet( string )        Inference > Samples... >   
    - string = node to set
   
    samplesClear( string )        Inference > Samples... >   
    - string = node to clear
   
    samplesBeg( int )        Inference > Samples...
    - int = beginning update to define subset of the stored sample for analysis
   
    samplesEnd( int )        Inference > Samples... 
    - int = ending update to define subset of the stored sample for analysis
   
    samplesFirstChain( int )        Inference > Samples...
    - int = select beginning of range of chains which contribute to statistics being calculated
   
    samplesLastChain( int )        Inference > Samples... 
    - int = select end of range of chains which contribute to statistics being calculated 
   
    samplesThin( int )        Inference > Samples...
    - int = thin. Every int th sample is used for inference. Does not impact storage
   requirements.
   
    samplesStats( string )        Inference > Samples... >   
   - string = node for which to calculate sample statistics. Can use '*' for all set nodes.
   
   * samplesDensity( string )        Inference > Samples... >   
    - string = node for which to generate density plot. Can use '*' for all set nodes.
   
   * samplesAutoC( string )        Inference > Samples... >   
    - string = node for which to generate autocorrelation plot. Can use '*' for all set nodes.
   
   * samplesTrace( string )        Inference > Samples... >   
    - string = node for which to generate trace plot. Can use '*' for all set nodes.
   
   * samplesHistory( string )        Inference > Samples... >   
    - string = node for which to generate history plot. Can use '*' for all set nodes.
   
   * samplesQuantiles( string )        Inference > Samples... >   
    - string = node for which to generate quantiles plot. Can use '*' for all set nodes.
   
   * samplesBgr( string )        Inference > Samples... >   
    - string = node for which to generate Brooks-Gelman-Rubin diagnostics. 
   Can use '*' for all set nodes.
   
    samplesCoda( string0 , string1 )        Inference > Samples... >   
    - string0 = node for which to generate CODA output. Can use '*' for all set nodes.
   - string1 = 'fileStem' 
   ______________________________________________________________
   
    summarySet( string )        Inference > Summary... >    
    - string = node for which to calculate running mean, standard deviation and quantiles
   
    summaryStats( string )        Inference > Summary... >    
    - string = node for which to display approximate running summary statistics
   
    summaryMean( string )        Inference > Summary... >    
    - string = node for which to display running mean in comma delimited form
   
    summaryClear( string )        Inference > Summary... >    
    - string = node to remove the running summary statistics
   _____________________________________________________________________
          
    ranksSet( string )        Inference > Rank... > 
    - string = node to be ranked (must be an array) 
    
    ranksStats( string )        Inference > Rank... > 
    - string = node for which to summarize the simulated ranks of the components
   
   * ranksHistogram( string )        Inference > Rank... > 
    - string = node for which to display a histogram of the simulated ranks of the components
   
    ranksClear( string )        Inference > Rank... > 
    - string = node for which to clear the running summary 
   _____________________________________________________________________
   
    dicSet()        Inference > DIC... >
   Start calculating DIC and related statistics
   
    dicClear()        Inference > DIC... > 
   Clear DIC calculations from memory
   
    dicStats()        Inference >DIC... > 
   Display DIC, Dbar, Dhat, and pD
   _____________________________________________________________________
   
    infoNodeValues( string )        Info > Node info... > 
    - string = node for which to display the current value(s)
   
    infoNodeMethods( string )        Info > Node info... > 
    - string = node for which you want to see the type of updater used to sample from
   
    infoNodeTypes( string )        Info > Node info... > 
    - string = node for which you want to see the node type
   
    infoMemory()        Info > Memory
   Show the amount of memory allocated
   _____________________________________________________________________
   
    * infoUnitializedUpdaters()        Info > Uninitialized Nodes
   Shows nodes in the compiled model that have not been initialized yet.
   
    infoUpdatersbyName()        Info > Updaters(by name)
   List the nodes with their associated updater algorithm in alphabetical order .
   
    infoUpdatersbyDepth()        Info > Updaters(by depth)
   List the nodes with their associated updater algorithm in the reverse topological order to 
   which they occur in the graphical model.
   _____________________________________________________________________
   
    infoModules()        Info > Modules
    Displays all the modules (dynamic link libraries) in use. 
        
